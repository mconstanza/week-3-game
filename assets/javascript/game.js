// Overwatch Hangman Game



// Instantiate the wordlist variable and populate it with 
// pre-defined phrases.
var wordList = [

"Nerf this",
"It's high noon",
"Peanut butter",
"The cavalry's here",
"Fire in the hole",
"Here comes the apocalypse",
"Justice rains from above",
"Catch phrase",
"I can bench more than you",
"ryuu ga waga teki wo kurau"

]


// OBJECTS ////////////////////////////////////////////////////////////////////////////////////////////////

function Puzzle(wordlist) {
	// Methods
	this.getWord = function (wordList) {
		var word = Math.floor((Math.random() * wordList.length));
		return wordList[word]
	}
	// Creates a blank puzzle with the solution generated by getWord
	this.getBlanks = function(word) {
		var blanks = ""
		for (letter in word) {
			//console.log(letter)
			if (word[letter] == ' ') {
				//console.log(letter)
				blanks += '\xa0'
				//console.log("BLANK SPACE")
			}else if (word[letter] == '.'){
				blanks +=".";
			}else if (word[letter] == ',') {
				blanks += ',';
			}else if (word[letter] == "'") {
				blanks += "'";
			}else {
				blanks += "_";
			}
		}
		return blanks
	}

	// Properties
	this.solution = this.getWord(wordList);
	this.blanks = this.getBlanks(this.solution);
	this.blanksWithSpaces = extraSpaces(this.blanks);
}




function Player(blanks) {

	// set starting guess to blank puzzle
	this.workingPuzzle = blanks;
	this.guesses = [];
}




// FUNCTIONS///////////////////////////////////////////////////////////////////////////////////////////////

// Prompt a player to input a letter
var playerInput = function(playerGuesses) {
	var guess = prompt("Guess a letter.");
	if (guessValid(guess, playerGuesses)){
		return guess
	}else{
		playerInput()
	}
}


// Check if a player's guess is valid
var guessValid = function (guess, playerGuesses) {
	var regex=/[^a-zA-Z]+$/;
	if (guess.match(regex)) {
		alert("Guess must be a letter.");
	}else if (guess.length < 1) {
		alert("You must input a letter.");
	}else if (guess.length > 1) {
		alert("Only guess one letter at a time.");
	}else if (guess in playerGuesses) {
		alert("You already guessed that letter!")
	}else{
		return true
	}
}

var guessCheck = function (guess, playerGuesses, workingPuzzle, puzzleSolution) {

	if (checkString(puzzleSolution, guess)) {
		workingPuzzle = arrayToString(replaceInArray(stringToArray(workingPuzzle), guess, puzzleSolution))
	console.log(workingPuzzle)
	}else{

	}
	
	return workingPuzzle	
}


var extraSpaces = function(word) { //adds extra characters to all letters in a word's display for HTML
		var wordWithSpaces = ""
		for (letter in word) {
			wordWithSpaces += word[letter] + " "
		}
		return wordWithSpaces
}
// These functions check if the guess is in the solution and rewrite the workingPuzzle to account for correct answers

var checkString = function(string, guess) {
	if (string.indexOf(guess) > -1) {
		return true
	}else{
		return false
	}
}

var stringToArray = function(string) {
	array = []
	for (char in string) {
		array.push(string[char])
	}
	console.log("Array: " + array)
	return array
}

var replaceInArray = function(array, guess, puzzleSolution) {
	for (char in puzzleSolution) {
		if (guess == puzzleSolution[char]) {
			array[char] = guess;
		}else{
			continue
		}
	}return array
}

var arrayToString = function(array) {
	var string = ""
	for (i in array) {
		string += array[i];
	}
	return string
}
//////////////////////////////////////////////////////////////////////////////////////////////////////

// Logic
var winner = false;



// Create Puzzle
var puzzle = new Puzzle(wordList);

//Create Player
var player = new Player(puzzle.blanks);


console.log(puzzle.solution) //debugging

var playerGuess = playerInput(player.guesses)

console.log(playerGuess)

//console.log(player.workingPuzzle[1])

player.workingPuzzle = guessCheck(playerGuess, player.guesses, 
	player.workingPuzzle, puzzle.solution)

console.log(player.workingPuzzle)




// Main game loop
//while winner (false){







//}
