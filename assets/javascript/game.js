// Overwatch Hangman Game

// Instantiate the wordlist variable and populate it with 
// pre-defined phrases.
var wordList = [

"Nerf this",
"It's high noon",
"Peanut butter",
"Cheers love, the cavalry's here",
"Fire in the hole",
"Here comes the apocalypse",
"Justice rains from above",
"Catch phrase",
"I can bench more than you",
"ryuu ga waga teki wo kurau",
"Sorry",
"Winky face",
"I've got you in my sights",
"It's better to be the hammer than the nail"
]

var incorrectGuesses;
var guesses;
var guess;
var nerfThis;
var valid = false;

// INIT ///////////////////////////////////////////////////////////////////////////////////////////////

// This begins a new game
var startGame = function() {
	var game = new Game(wordList);// Create new gaming session
	soundInit() // Initialize sound files
	game.newPuzzle(); // Create a new puzzle
	game.play();  // Play the game!
}

var nextPuzzle = function() {
	incorrectGuesses = []
	guesses = []
	game = new Game(wordList);
	game.newPuzzle()
	game.play()
}

// This sets up all relevant sound files
var soundInit = function() {
	nerfThis = new sound("assets/sounds/dva_nerf_this.mp3");
}

// FUNCTIONS///////////////////////////////////////////////////////////////////////////////////////////////

// Function for creating sound files
function sound(src) {
    this.sound = document.createElement("audio");
    this.sound.src = src;
    this.sound.setAttribute("preload", "auto");
    this.sound.setAttribute("controls", "none");
    this.sound.style.display = "none";
    document.body.appendChild(this.sound);
    this.play = function(){
        this.sound.play();
    }
    this.stop = function(){
        this.sound.pause();
    }
}

// Prompt a player to input a letter
var playerInput = function() {
	var guess = prompt("Guess a letter.")
	return guess
}


var extraSpaces = function(word) { //adds extra characters to all letters in a word's display for HTML
		var wordWithSpaces = ""
		for (letter in word) {
			wordWithSpaces += word[letter] + " "
		}
		return wordWithSpaces
}


// These functions check if the guess is in the solution and rewrite the workingPuzzle to account for correct answers

var checkArray = function(array, guess) {
	console.log("array: " + array)
	if (array.indexOf(guess) > -1) {
		return true
	}else{
		return false
	}
}

var stringToArray = function(string) {
	array = []
	for (char in string) {
		array.push(string[char])
	}
	return array
}

var replaceInArray = function(array, guess, puzzleSolution) {
	for (i in puzzleSolution) {
		if (guess == puzzleSolution[i]) {
			array[i] = guess;
		}else{
			continue
		}
	}return array
}

var arrayToString = function(array) {
	var string = ""
	for (i in array) {
		string += array[i];
	}
	return string
}



// Chooses a word from the wordlist at random
getWord = function (wordList) {
	var word = Math.floor((Math.random() * wordList.length));
	return wordList[word].toLowerCase()
}
// Creates a blank puzzle with the solution generated by getWord
getBlanks = function(word) {
	var blanks = ""
	for (letter in word) {
		//console.log(letter)
		if (word[letter] == ' ') {
			//console.log(letter)
			blanks += '\xa0'
			//console.log("BLANK SPACE")
		}else if (word[letter] == '.'){
			blanks +=".";
		}else if (word[letter] == ',') {
			blanks += ',';
		}else if (word[letter] == "'") {
			blanks += "'";
		}else {
			blanks += "_";
		}
	}
	return stringToArray(blanks) // convert the string into an array for easy comparison
}

// Check if a player's guess is valid
var guessValid = function (guess, playerGuesses) {
	
	var regex=/[^a-zA-Z]+$/;
	console.log("validating guess: " + guess)
	console.log("Player Guesses: " + playerGuesses)	

	if (guess == null) {
		alert("You must input a letter.");
		return false

	}else if (guess.match(regex)) {
		alert("Guess must be a letter.");
		return false

	} else if (guess.length > 1) {
		alert("Only guess one letter at a time.");
		return false

	} else if (playerGuesses.indexOf(guess) > -1) {
		//alert("You already guessed that letter!")
		console.log("You already guessed that letter!")
		return false

	}else if (guess.length < 1) {
		alert("You must input a letter.");
		return false

	}else{
		return true
	}
}


// Check if the player's guess is in the puzzle
var guessCheck = function (guess, playerGuesses, incorrectGuesses, workingPuzzle, puzzleSolution) {

	if (checkArray(puzzleSolution, guess) == true) {

		workingPuzzle = replaceInArray(workingPuzzle, guess, puzzleSolution)
		console.log("In the puzzle and adding " + guess + " to guesses")
		playerGuesses.push(guess);
		console.log("Guesses: " + guesses);

	}else if (checkArray(puzzleSolution, guess) == false){
		console.log("NOT in the puzzle and adding " + guess + " to guesses")
		playerGuesses.push(guess)
		incorrectGuesses.push(guess)
		console.log("Guesses: " + guesses);

	}else{
		// console.log("guess is invalid")	
	}

	//console.log("Player Guesses: " + playerGuesses)	
	return [workingPuzzle, playerGuesses, incorrectGuesses]	
}





// Figure out if the game should end
winCheck = function(workingPuzzle, incorrectGuesses, puzzleSolution) {
	console.log("working puzzle, puzzle solution: " + workingPuzzle + " "
	+ solution)		
	//console.log(workingPuzzle.localeCompare(puzzleSolution))
	// console.log("Working array: " + stringToArray(workingPuzzle))
	// console.log("solution array: " + stringToArray(puzzleSolution))

	if (workingPuzzle.indexOf('_') == -1) {
		displayPuzzle(workingPuzzle)
		gameOver = true
		console.log("You win!")

		console.log("Nerf this sound in win function: " + nerfThis)
		nerfThis.play()
		//alert("You win! Great job!")

	}else if (incorrectGuesses.length >= 5) {
		displayPuzzle(workingPuzzle)
		gameOver = true
		console.log("You lose")
		//alert("Ouch. You lose.")

	}else {
		gameOver = false
	}
	return gameOver
}	

// function to show the current working puzzle on the screen
displayPuzzle = function(workingPuzzle) {
	document.querySelector(".puzzle").innerHTML = extraSpaces(workingPuzzle)
}

// Main game OBJECT

function Game(wordlist) {

	this.newPuzzle = function() {

		// variables to be reset each game
		if (typeof guesses != "undefined") {guesses.length = 0;} // clear the array
		guesses = [];

		if (typeof incorrectGuesses != "undefined") {incorrectGuesses.length = 0;} // clear the array
		incorrectGuesses = [];

		gameOver= false;
		solution = stringToArray(getWord(wordList));
		blanks = getBlanks(solution);
		blanksWithSpaces = extraSpaces(blanks);
		workingPuzzle = blanks;
	}



	// Main Logic
	this.play = function() {



		// console.log("Working puzzle at loop start: " + workingPuzzle)
		// console.log("player: " + guesses)
		// console.log("workingpuzzle with spaces: " + extraSpaces(workingPuzzle))

	    
	    displayPuzzle(workingPuzzle);

	    var keyPressed = true;
		window.addEventListener("keydown", function(event){
			if (keyPressed) return;
				var keyPressed = false;
			// accept input
				guess = String.fromCharCode(event.keyCode).toLowerCase()
				console.log("Guess: " + guess)
			})
		
			
		window.addEventListener("keyup", function(){
			// validate input
			valid = guessValid(guess, guesses);
			displayPuzzle(workingPuzzle);

			if(valid === true) {
				
				returnArray = guessCheck(guess, guesses, incorrectGuesses, 
				workingPuzzle, solution);
				workingPuzzle = returnArray[0];
				console.log("working puzzle after return: " + workingPuzzle)
				guesses = returnArray[1];
				incorrectGuesses = returnArray[2];
				
				displayPuzzle(workingPuzzle)
				var keyPressed = true;

		    }else {
		    	var keyPressed = true;
			}
			if (winCheck(workingPuzzle, incorrectGuesses, solution)) {
				nextPuzzle()
			}
		})	
		displayPuzzle(workingPuzzle)
		
		
	}
}



//////////////////////////////////////////////////////////////////////////////////////////////////////






